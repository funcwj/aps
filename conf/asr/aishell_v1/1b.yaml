# cmd_args:
#   batch_size: 64
#   dev_batch_factor: 2
#   device_ids: 0,1,2,3
#   dict: data/aishell_v1/dict
#   distributed: torch
#   epochs: 80
#   eval_interval: 2500
#   init: ''
#   num_workers: 32
#   prog_interval: 100
#   resume: ''
#   save_interval: -1
#   seed: '888'
#   tensorboard: false
#   trainer: ddp

nnet: asr@xfmr

nnet_conf:
  input_size: 80
  enc_type: cfmr
  dec_kwargs:
    arch_kwargs:
      att_dim: 256
      att_dropout: 0.2
      feedforward_dim: 2048
      ffn_dropout: 0.2
      nhead: 4
    num_layers: 6
    pose_kwargs:
      dropout: 0.2
  enc_kwargs:
    arch_kwargs:
      att_dim: 256
      att_dropout: 0.2
      feedforward_dim: 2048
      ffn_dropout: 0.2
      kernel_size: 15
      nhead: 4
    num_layers: 12
    output_proj: -1
    pose: rel
    pose_kwargs:
      dropout: 0.2
      lradius: 256
      rradius: 256
    proj: conv2d
    proj_kwargs:
      conv_channels: 256
      num_layers: 3

asr_transform:
  feats: perturb-fbank-log-cmvn-aug
  frame_hop: 160
  frame_len: 400
  log_lower_bound: 1
  norm_mean: true
  norm_var: true
  num_mels: 80
  pre_emphasis: 0.97
  round_pow_of_two: true
  sr: 16000
  stft_mode: kaldi
  window: hamm
  audio_norm: false
  aug_freq_args:
  - 20
  - 2
  aug_mask_zero: false
  aug_maxp_time: 0.2
  aug_prob: 1
  aug_time_args:
  - 80
  - 2

task: asr@ctc_xent

task_conf:
  ctc_weight: 0.2
  lsm_factor: 0.1
  lsm_method: uniform

trainer_conf:
  acmu_gradient: 4
  clip_gradient: 20
  lr_scheduler: warmup_linear_decay_lr
  lr_scheduler_kwargs:
    peak_lr: 0.0004
    stop_lr: 1.0e-08
    time_stamps: [25000, 25000, 200000]
  lr_scheduler_period: step
  no_impr: 15
  no_impr_thres: 0.01
  optimizer: adam
  optimizer_kwargs:
    lr: 0
    weight_decay: 0.0001
  report_metrics: ["loss", "accu", "@ctc"]
  stop_criterion: accu

data_conf:
  fmt: am@raw
  loader:
    adapt_dur: 5
    adapt_token_num: 100
    max_dur: 30
    max_token_num: 400
    min_dur: 0.1
  train:
    text: data/aishell_v1/train/text
    utt2dur: data/aishell_v1/train/utt2dur
    wav_scp: data/aishell_v1/train/wav.scp
  valid:
    text: data/aishell_v1/dev/text
    utt2dur: data/aishell_v1/dev/utt2dur
    wav_scp: data/aishell_v1/dev/wav.scp
